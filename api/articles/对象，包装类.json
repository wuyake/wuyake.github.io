{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"对象，包装类","date":"2024-03-13T07:57:08.167Z","updated":"2024-03-13T08:58:32.816Z","comments":true,"path":"api/articles/对象，包装类.json","keywords":null,"cover":null,"content":"<h1 id=\"对象，包装类\"><a href=\"#对象，包装类\" class=\"headerlink\" title=\"对象，包装类\"></a>对象，包装类</h1><h2 id=\"1，对象直接量-自变量\"><a href=\"#1，对象直接量-自变量\" class=\"headerlink\" title=\"1，对象直接量&#x2F;自变量\"></a>1，对象直接量&#x2F;自变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var obj  =  &#123;</span><br><span class=\"line\">    name = &quot;xiaoliu&quot;,</span><br><span class=\"line\">    sex = &quot;male&quot;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">属性与属性值用冒号来连接。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2，构造函数\"><a href=\"#2，构造函数\" class=\"headerlink\" title=\"2，构造函数\"></a>2，构造函数</h2><p>（1）内置对象 objack()，array()， nuber() 。<br>（2）自定义对象 。<br>构造函数对象的属性与属性值之间用等号来连接。</p>\n<h2 id=\"3，对象的增删改查\"><a href=\"#3，对象的增删改查\" class=\"headerlink\" title=\"3，对象的增删改查\"></a>3，对象的增删改查</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">增   对象名.属性 = 属性值   eg：obj.name = &quot;xiaoliu&quot;</span><br><span class=\"line\">删   delete.对象名.属性    eg：delete.obj.name</span><br><span class=\"line\">改   对象名.属性 = 新的属性值  eg：obj.name = &quot;xiaozhang&quot;</span><br><span class=\"line\">查   对象名.属性              eg：obj.name</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4，对象的执行一次就创建一个新对象，虽然值一样但两者并不相等。\"><a href=\"#4，对象的执行一次就创建一个新对象，虽然值一样但两者并不相等。\" class=\"headerlink\" title=\"4，对象的执行一次就创建一个新对象，虽然值一样但两者并不相等。\"></a>4，对象的执行一次就创建一个新对象，虽然值一样但两者并不相等。</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var car = new Car();</span><br><span class=\"line\">var car1 = new Car();</span><br><span class=\"line\">对于想要新对象的值不一样，可以在构造函数里传参数</span><br><span class=\"line\">functiion Car (name,sex)&#123;</span><br><span class=\"line\">    this.name = name;</span><br><span class=\"line\">    this.sex = sex;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var car = new Car(&#x27;xiaoliu&#x27;,&#x27;male&#x27;);</span><br><span class=\"line\">var car1 = new Car(&#x27;xiaozhang&#x27;,&#x27;female&#x27;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5，构造函数内部原理。\"><a href=\"#5，构造函数内部原理。\" class=\"headerlink\" title=\"5，构造函数内部原理。\"></a>5，构造函数内部原理。</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Car()&#123;</span><br><span class=\"line\">    1.new之后 隐式var this = &#123;&#125;</span><br><span class=\"line\">    2.执行代码块</span><br><span class=\"line\">    this.name = &quot;xiaoliu&quot;;</span><br><span class=\"line\">    this.sex = &quot;male&quot;;</span><br><span class=\"line\">    3.隐式的return this</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var car = new Car();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6，原始值没有属性和方法，只有对象才有\"><a href=\"#6，原始值没有属性和方法，只有对象才有\" class=\"headerlink\" title=\"6，原始值没有属性和方法，只有对象才有\"></a>6，原始值没有属性和方法，只有对象才有</h2><p>原始值分为原始值和对象类原始值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象类原始值 var num = new Nember();</span><br><span class=\"line\">            var str = new string();</span><br><span class=\"line\">            var bol = new boolean();</span><br></pre></td></tr></table></figure>\n\n<p>原始值要访问属性和方法的结果是undefined,字符串有lenth属性</p>\n<h2 id=\"7，包装类\"><a href=\"#7，包装类\" class=\"headerlink\" title=\"7，包装类\"></a>7，包装类</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var num = 4;</span><br><span class=\"line\">num.len = 2;  系统检测原始值没有属性和方法 然后给你new Number(4).lenth = 2; 然后销毁 delete</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(num.len) 系统检测原始值要访问属性方法 给你new Number(4)查看.lenth属性，由于没设置属性所以返回结果为undefind</span><br></pre></td></tr></table></figure>\n\n","text":"对象，包装类1，对象直接量/自变量12345var obj = { name = \"xiaoliu\", sex = \"male\"} 属性与属性值用冒号来连接。 ...","permalink":"/post/对象，包装类","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%8C%85%E8%A3%85%E7%B1%BB\"><span class=\"toc-text\">对象，包装类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%9B%B4%E6%8E%A5%E9%87%8F-%E8%87%AA%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1，对象直接量&#x2F;自变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%EF%BC%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2，构造函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5\"><span class=\"toc-text\">3，对象的增删改查</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%EF%BC%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E5%B0%B1%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%B0%E5%AF%B9%E8%B1%A1%EF%BC%8C%E8%99%BD%E7%84%B6%E5%80%BC%E4%B8%80%E6%A0%B7%E4%BD%86%E4%B8%A4%E8%80%85%E5%B9%B6%E4%B8%8D%E7%9B%B8%E7%AD%89%E3%80%82\"><span class=\"toc-text\">4，对象的执行一次就创建一个新对象，虽然值一样但两者并不相等。</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%EF%BC%8C%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%E3%80%82\"><span class=\"toc-text\">5，构造函数内部原理。</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6%EF%BC%8C%E5%8E%9F%E5%A7%8B%E5%80%BC%E6%B2%A1%E6%9C%89%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%EF%BC%8C%E5%8F%AA%E6%9C%89%E5%AF%B9%E8%B1%A1%E6%89%8D%E6%9C%89\"><span class=\"toc-text\">6，原始值没有属性和方法，只有对象才有</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7%EF%BC%8C%E5%8C%85%E8%A3%85%E7%B1%BB\"><span class=\"toc-text\">7，包装类</span></a></li></ol></li></ol>","author":{"name":"WuYa","slug":"blog-author","avatar":"","link":"/","description":"一位正在记笔记的人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"Three问题清单","date":"2024-03-13T07:46:14.643Z","updated":"2024-03-13T08:35:29.311Z","comments":true,"path":"api/articles/Three问题清单.json","keywords":null,"cover":null,"text":"Three问题清单 删除2，3d数据dom会跟着删除 检测数组如果直接存精灵，会出现精灵已经删除，还是会被射线检测到问题，改正后存在group中再放入检测数组 ...","permalink":"/post/Three问题清单","photos":[],"count_time":{"symbolsCount":81,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"WuYa","slug":"blog-author","avatar":"","link":"/","description":"一位正在记笔记的人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}