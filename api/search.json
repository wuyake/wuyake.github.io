[{"id":"2b863cd19375388abc765419ba2daf9f","title":"截取链接的参数","content":"截取链接的参数1234567891011121314151617181920212223242526272829303132333435type // 需要的参数path // 链接let type = that.getUrlValue(&#x27;type&#x27;, path);   getUrlValue: function (kValue, Url) &#123;      var url = Url; //当前页面的地址      var reg = /([^?&amp;=]+)=([^?&amp;=]+)/g,        obj = &#123;&#125;,        str = url;      url.replace(reg, function () &#123;        obj[arguments[1]] = arguments[2];      &#125;);      for (var keyName in obj) &#123;        if (keyName == kValue) &#123;          return obj[keyName];          // break;        &#125;      &#125;    &#125;\n\n","slug":"截取链接的参数","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"Javascript","author_index":"WuYa"},{"id":"36ccae725b9391c6073cbef7348862c5","title":"圆圈水波纹动效（华为充电效果）","content":"圆圈水波纹动效（华为充电效果）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139&lt;view class=&quot;g-contrast&quot;&gt;          &lt;view class=&quot;g-circle&quot;&gt;&lt;/view&gt;&lt;/view&gt;/* before */.g-contrast &#123;  position: absolute;  top: 15%;  left: 50%;  transform: translate(-50%, 0);  z-index: -1;  filter: contrast(10) hue-rotate(0);  width: 390rpx;  height: 385rpx;  overflow: hidden;  animation: hueRotate 10s infinite linear;&#125;.g-circle &#123;  position: relative;  width: 385rpx;  height: 385rpx;  box-sizing: border-box;  filter: blur(8px);&#125;.g-circle::after &#123;  content: &quot;&quot;;  position: absolute;  top: 50%;  left: 50%;  transform: translate(-50%, -50%) rotate(0);  width: 160px;  height: 160px;  background-color: #00ff6f;  border-radius: 42% 38% 62% 49% / 45%;  animation: rotate 10s infinite linear;&#125;.g-circle::before &#123;  content: &quot;&quot;;  position: absolute;  width: 176px;  height: 176px;  top: 40%;  left: 50%;  transform: translate(-50%, -50%);  border-radius: 50%;  /* background-color: #000; */  z-index: 10;&#125;@keyframes rotate &#123;  50% &#123;    border-radius: 45% / 42% 38% 58% 49%;  &#125;  100% &#123;    transform: translate(-50%, -50%) rotate(720deg);  &#125;&#125;@keyframes moveToTop &#123;  90% &#123;    opacity: 1;  &#125;  100% &#123;    opacity: .1;    transform: translate(-50%, -180px);  &#125;&#125;@keyframes hueRotate &#123;  100% &#123;    filter: contrast(15) hue-rotate(360deg);  &#125;&#125;/* end */\n\n","slug":"圆圈水波纹动效华为充电效果","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"css","author_index":"WuYa"},{"id":"b5c578d05b51dde393ca2d7088c14b6a","title":"uniapp中事件传参，传递对象","content":"uniapp中事件传参，传递对象1，套用多层vfor循环的复杂页面结构指定的:key&#x3D;”subItem.id” 为undefind引起的问题导致点击传的参数为undefind。并且如果是多层v-for嵌套，只要某一层的:key出现问题，那么这一层以及其子级循环的值都无法取到。尽量使用:key!&#x3D;false\n","slug":"uniapp中事件传参，传递对象","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"uniapp","author_index":"WuYa"},{"id":"ba79f23e67cd01a5c0924f8663f61aff","title":"小程序自定义tabbar","content":"小程序自定义tabbar1，自定义tabbar组件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151&lt;!--miniprogram/custom-tab-bar/index.wxml--&gt;&lt;cover-view class=&quot;tab-bar&quot;&gt;  &lt;cover-view wx:for=&quot;&#123;&#123; list &#125;&#125;&quot; wx:key=&quot;index&quot; class=&quot;tab-bar-item&quot; data-path=&quot;&#123;&#123; item.pagePath &#125;&#125;&quot; data-index=&quot;&#123;&#123; index &#125;&#125;&quot; bindtap=&quot;switchTab&quot;&gt;    &lt;cover-image class=&quot;img&quot; src=&quot;&#123;&#123; selected === index ? item.selectedIconPath : item.iconPath &#125;&#125;&quot;&gt;&lt;/cover-image&gt;    &lt;!-- &lt;cover-view style=&quot;color: &#123;&#123; selected === index ? selectedColor : color &#125;&#125;&quot;&gt;&#123;&#123; item.text &#125;&#125;&lt;/cover-view&gt; --&gt;  &lt;/cover-view&gt;&lt;/cover-view&gt;Component(&#123;  data: &#123;    selected: 0,    color: &#x27;#7A7E83&#x27;,    selectedColor: &#x27;#3cc51f&#x27;,    list: [      &#123;        pagePath: &#x27;/pages/home/index&#x27;,        iconPath: &#x27;/images/tabbar/ic_home_active.png&#x27;,        selectedIconPath: &#x27;/images/tabbar/ic_home.png&#x27;      &#125;,      &#123;        pagePath: &#x27;/pages/Profile/index&#x27;,        iconPath: &#x27;/images/tabbar/ic_my.png&#x27;,        selectedIconPath: &#x27;/images/tabbar/ic_my_active.png&#x27;      &#125;    ]  &#125;,  attached() &#123;&#125;,  methods: &#123;    switchTab(e) &#123;      const data = e.currentTarget.dataset;      const url = data.path;      wx.switchTab(&#123; url &#125;);      this.setData(&#123;        selected: data.index      &#125;);    &#125;  &#125;&#125;);.tab-bar &#123;  position: fixed;  bottom: 0;  left: 0;  right: 0;  height: 50px;  background: white;  display: flex;  padding-bottom: env(safe-area-inset-bottom);  box-shadow: 0px -2px 4px 0px rgba(0, 0, 0, 0.08);&#125;/* .tab-bar-border &#123;  background-color: rgba(0, 0, 0, 0.33);  position: absolute;  left: 0;  top: 0;  width: 100%;  height: 1px;  transform: scaleY(0.5);&#125; */.tab-bar-item &#123;  flex: 1;  text-align: center;  display: flex;  justify-content: center;  align-items: center;  flex-direction: column;&#125;.tab-bar-item .img &#123;  width: 44rpx;  height: 44rpx;&#125;.tab-bar-item:nth-child(2) .img &#123;  width: 44rpx;  height: 48rpx;&#125;/* .tab-bar-item cover-view &#123;  font-size: 10px;&#125; */\n\n2，appjson12345678910111213141516171819202122232425262728293031323334353637&quot;tabBar&quot;: &#123;   &quot;custom&quot;: true,   &quot;color&quot;: &quot;#7A7E83&quot;,   &quot;selectedColor&quot;: &quot;#3cc51f&quot;,   &quot;borderStyle&quot;: &quot;black&quot;,   &quot;backgroundColor&quot;: &quot;#ffffff&quot;,   &quot;list&quot;: [     &#123;       &quot;pagePath&quot;: &quot;pages/home/index&quot;,       &quot;iconPath&quot;: &quot;/images/tabbar/ic_home_active.png&quot;,       &quot;selectedIconPath&quot;: &quot;/images/tabbar/ic_home.png&quot;     &#125;,     &#123;       &quot;pagePath&quot;: &quot;pages/Profile/index&quot;,       &quot;iconPath&quot;: &quot;/images/tabbar/ic_my.png&quot;,       &quot;selectedIconPath&quot;: &quot;/images/tabbar/ic_my_active.png&quot;     &#125;   ] &#125;,\n\n3，使用123456789101112131415161718192021Component(&#123;  pageLifetimes: &#123;    show() &#123;      if (typeof this.getTabBar === &#x27;function&#x27; &amp;&amp; this.getTabBar()) &#123;        this.getTabBar().setData(&#123;          selected: 1        &#125;);      &#125;    &#125;  &#125;,&#125;）\n\n","slug":"小程序自定义tabbar","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"小程序","author_index":"WuYa"},{"id":"515eb76b9da7b3d45bad159363b6fea8","title":"小程序自定义导航","content":"小程序自定义导航\n\n1，导航组件lt;!-- components/my-component/index.wxml --&gt;&lt;view class=&quot;topbar&quot; style=&quot;background: &#123;&#123;imgdata.bgcolor&#125;&#125;;padding-top:&#123;&#123; statusBarHeight &#125;&#125;px ;&quot;&gt;  &lt;view class=&quot;tb_body&quot;&gt;    &lt;view class=&quot;set row&quot; wx:if=&quot;&#123;&#123;setting&#125;&#125;&quot; bindtap=&quot;setClick&quot;&gt;&#123;&#123; setting &#125;&#125;&lt;/view&gt;    &lt;image wx:if=&quot;&#123;&#123;back&#125;&#125;&quot; bindtap=&quot;callback&quot; src=&quot;&#123;&#123;back&#125;&#125;&quot; style=&quot;width:48rpx;height:48rpx;margin-left: 30rpx;&quot;&gt;&lt;/image&gt;    &lt;image wx:if=&quot;&#123;&#123;home&#125;&#125;&quot; bindtap=&quot;callhome&quot; src=&quot;&#123;&#123;home&#125;&#125;&quot; style=&quot;width:64rpx;height:64rpx;margin-left: 36rpx;&quot;&gt;&lt;/image&gt;    &lt;view class=&quot;title row&quot; style=&quot;color: &#123;&#123;title.color&#125;&#125;&quot;&gt;&#123;&#123; title.title &#125;&#125;&lt;/view&gt;  &lt;/view&gt;&lt;/view&gt;&lt;!-- &lt;view&gt;  &lt;cover-image class=&quot;&quot; src=&quot;&quot; bindload=&quot;&quot; binderror=&quot;&quot;&gt;     mode=&quot;widthFix&quot;  &lt;/cover-image&gt;&lt;/view&gt; --&gt;&lt;image class=&quot;bg_head&quot; wx:if=&quot;&#123;&#123;imgdata.path&#125;&#125;&quot; src=&quot;&#123;&#123;imgdata.path&#125;&#125;&quot; bindload=&quot;imgInfo&quot; style=&quot;width:&#123;&#123;imgdata.width&#125;&#125;;height:&#123;&#123;imgdata.height&#125;&#125;&quot;&gt;&lt;/image&gt;&lt;view class=&quot;top-comend&quot; style=&quot;padding-top:&#123;&#123; statusBarHeight &#125;&#125;px&quot;&gt;&lt;/view&gt;const app = getApp();Component(&#123;  /**   * 组件的属性列表   */  properties: &#123;    setting: &#123;      type: String,      value: &#x27;&#x27;    &#125;,    title: &#123;      type: Object,      value: &#123;        color: &#x27;#fff&#x27;,        title: &#x27;&#x27;      &#125;    &#125;,    imgdata: &#123;      type: Object,      value: &#123;        path: &#x27;&#x27;,        width: &#x27;&#x27;,        height: &#x27;&#x27;,        bgcolor: &#x27;#fff&#x27;      &#125;    &#125;,    back: &#123;      type: String,      value: &#x27;&#x27;    &#125;,    home: &#123;      type: String,      value: &#x27;&#x27;    &#125;  &#125;,  /**   * 组件的初始数据   */  data: &#123;    statusBarHeight: app.globalData.statusBarHeight,    imgwidth: 0,    imgheight: 0  &#125;,  ready: function () &#123;    // console.log(this.data.imgdata);  &#125;,  /**   * 组件的方法列表   */  methods: &#123;    imageLoad: function (e) &#123;      var _this = this;      var $width = e.detail.width, //获取图片真实宽度        $height = e.detail.height,        ratio = $width / $height; //图片的真实宽高比例      var viewWidth = 500, //设置图片显示宽度，        viewHeight = 500 / ratio; //计算的高度值      this.setData(&#123;        imgwidth: viewWidth,        imgheight: viewHeight      &#125;);    &#125;,    setClick(e) &#123;      this.triggerEvent(&#x27;setBtn&#x27;, true);    &#125;,    callback() &#123;      wx.navigateBack(&#123;        delta: 1      &#125;);    &#125;,    callhome() &#123;      wx.switchTab(&#123;        url: &#x27;/pages/home/index&#x27;      &#125;);    &#125;,    // 背景图回调    imgInfo: function (event) &#123;      // this.setData(&#123;      //   imgWidth:event.detail.width,      //   imgHeight:event.detail.height      // &#125;)    &#125;  &#125;&#125;);/* components/my-component/index.wxss */.topbar &#123;  width: 100%;  height: 88rpx;  /* background-color: pink; */  position: fixed;  top: 0;  left: 0;  z-index: 999;&#125;.tb_body &#123;  height: 100%;  display: flex;  justify-content: space-between;  align-items: center;&#125;.row &#123;  font-size: 32rpx;  font-family: PingFangSC, PingFangSC-Semibold;  font-weight: 600;  color: #ffffff;  line-height: 50rpx;&#125;.set &#123;  font-weight: 400;  margin-left: 60rpx;&#125;.title &#123;  position: absolute;  width: 100%;  /* text-align: center; */  padding-left: 120rpx;  z-index: -1;&#125;.top-comend &#123;  width: 100%;  height: 88rpx;&#125;.bg_head &#123;  position: absolute;  z-index: -1;&#125;\n\n\n\n\n\n2，app.js配置1234567891011// 获取高度    wx.getSystemInfo(&#123;      success: (res) =&gt; &#123;        this.globalData.height = res.statusBarHeight;      &#125;    &#125;);\n\n3，使用123456789101112131415 &quot;usingComponents&quot;: &#123;  &quot;component-tag-name&quot;: &quot;/components/my-component&quot;,  &#125;,&quot;navigationStyle&quot;: &quot;custom&quot;,  data: &#123;    imgdata: &#123;      path: &#x27;/images/profile/pfbg.png&#x27;,      width: &#x27;100%&#x27;,      height: &#x27;736rpx&#x27;    &#125;  &#125;,\n\n","slug":"小程序自定义导航","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"小程序","author_index":"WuYa"},{"id":"4c7ce13c917059478f31fe5eaf02636d","title":"搜索框的防抖和节流","content":"搜索框的防抖和节流1，防抖闭包函数12345678910111213141516171819202122232425262728293031323334353637// const fangdou = (() =&gt; &#123;   //    let  timeId = &#x27;&#x27;   //    return (val) =&gt; &#123;   //        clearTimeout(timeId)   //        timeId = setTimeout(() =&gt; &#123;   //            console.log(val)   //        &#125;, 1000)   //    &#125;   // &#125;)()   //   // 防抖函数不用闭包  污染全局变量   let timeId = &#x27;&#x27;   const fangdou = (val) =&gt; &#123;       clearTimeout(timeId)       timeId = setTimeout(() =&gt; &#123;           console.log(val)       &#125;, 1000)   &#125;\n\n2，节流123456789101112131415161718192021let pass = false;   const jieliu = (val) =&gt; &#123;       if (pass) &#123;           return       &#125;       pass = true       setTimeout(() =&gt; &#123;           console.log(val)           pass = false       &#125;, 1000)   &#125;\n\n","slug":"搜索框的防抖和节流","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"Javascript","author_index":"WuYa"},{"id":"ef423aef0aaabd6ebda2b8c384fcffef","title":"小程序视频封面，切换播放并显示封面","content":"小程序视频封面，切换播放并显示封面\n需求\n默认显示封面；\n\n一个视频播放的时候，其他视频停止播放，并显示封面。\n\n\n\n思路\n通过wx:if判断当前视频是否是播放的状态，如果是就显示视频，如果不是就隐藏视频；\n\n点击封面的时候，获取到该视频的id，进行判断，如果当前没有视频播放，就把该视频设置为播放的状态；如果当前有视频播放，则停止当前播放的视频，再播放你点击的这个视频。\n\n\n\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106&lt;view class=&quot;video_body&quot;&gt;  &lt;view wx:for=&quot;&#123;&#123;courseList&#125;&#125;&quot; wx:for-item=&quot;course&quot; class=&#x27;course-pannle-item&#x27; wx:for-index=&quot;idx&quot; wx:key=&quot;index&quot;&gt;      &lt;view class=&#x27;video-item&#x27;&gt;          &lt;video class=&quot;video&quot; wx:if=&#x27;&#123;&#123;idx==playIndex&#125;&#125;&#x27; id=&#x27;video&#123;&#123;idx&#125;&#125;&#x27; autoplay=&#x27;&#123;&#123;true&#125;&#125;&#x27; show-center-play-btn=&quot;&#123;&#123;false&#125;&#125;&quot; src=&#x27;&#123;&#123;course.videoUrl&#125;&#125;&#x27; controls=&quot;true&quot; objectFit=&quot;cover&quot;&gt;&lt;/video&gt;          &lt;image class=&#x27;video-cover video&#x27; wx:if=&#x27;&#123;&#123;idx!=playIndex&#125;&#125;&#x27; mode=&#x27;widthFix&#x27; src=&#x27;&#123;&#123;course.coverUrl&#125;&#125;&#x27;&gt;&lt;/image&gt;          &lt;image class=&#x27;video-play-btn&#x27; wx:if=&#x27;&#123;&#123;idx!=playIndex&#125;&#125;&#x27; mode=&#x27;widthFix&#x27; data-index=&#x27;&#123;&#123;idx&#125;&#125;&#x27; bindtap=&#x27;videoPlay&#x27; src=&#x27;/images/home/btn.png&#x27;&gt;&lt;/image&gt;          &lt;!-- &lt;text wx:if=&#x27;&#123;&#123;idx!=playIndex&#125;&#125;&#x27; class=&#x27;video-duration fs-28&#x27;&gt;                  &#123;&#123;course.duration&#125;&#125;              &lt;/text&gt; --&gt;      &lt;/view&gt;  &lt;/view&gt;&lt;/view&gt;data: &#123;playIndex: null, //用于记录当前播放的视频的索引值courseList: [&#123;videoUrl: &#x27;https://fxmv3-asset.oss-cn-zhangjiakou.aliyuncs.com/132a004191990de6d1dde6379a56987b.mp4&#x27;, //视频路径coverUrl: &#x27;/images/home/1.png&#x27;, //视频封面图duration: &#x27;03:00&#x27; //视频时长&#125;,&#123;videoUrl: &#x27;https://fxmv3-asset.oss-cn-zhangjiakou.aliyuncs.com/bddfba680554409e47aeb653ec5d58af.mp4&#x27;,coverUrl: &#x27;/images/home/2.png&#x27;,duration: &#x27;04:45&#x27;&#125;]&#125;,videoPlay: function (e) &#123;var curIdx = e.currentTarget.dataset.index;// 没有播放时播放视频if (!this.data.playIndex) &#123;this.setData(&#123; playIndex: curIdx&#125;);var videoContext = wx.createVideoContext(&#x27;video&#x27; + curIdx); //这里对应的视频idvideoContext.play();&#125; else &#123;// 有播放时先将prev暂停，再播放当前点击的currentvar videoContextPrev = wx.createVideoContext(&#x27;video&#x27; + this.data.playIndex);if (this.data.playIndex != curIdx) &#123;videoContextPrev.pause();&#125;this.setData(&#123;playIndex: curIdx&#125;);var videoContextCurrent = wx.createVideoContext(&#x27;video&#x27; + curIdx);videoContextCurrent.play();&#125;&#125;\n\n","slug":"小程序视频封面，切换播放并显示封面","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"小程序","author_index":"WuYa"},{"id":"c3a4e3c0eb5ef6020f00420943ce1aca","title":"时间格式化&指定几天前时间","content":"时间格式化&amp;指定几天前时间1，时间格式化123456789101112131415161718192021222324252627282930313233343536373839404142434445function formatDate(time,format=&#x27;YY-MM-DD hh:mm:ss&#x27;)&#123;     var date = new Date(time);     var year = date.getFullYear(),     month = date.getMonth()+1,//月份是从0开始的     day = date.getDate(),     hour = date.getHours(),     min = date.getMinutes(),     sec = date.getSeconds();     var preArr = Array.apply(null,Array(10)).map(function(elem, index) &#123;          return &#x27;0&#x27;+index;     &#125;);     开个长度为10的数组 格式为 00 01 02 03     var newTime = format.replace(/YY/g,year)            .replace(/MM/g,preArr[month]||month)            .replace(/DD/g,preArr[day]||day)            .replace(/hh/g,preArr[hour]||hour)            .replace(/mm/g,preArr[min]||min)           .replace(/ss/g,preArr[sec]||sec);      return newTime;&#125;formatDate(new Date().getTime());//2017-05-12 10:05:44formatDate(new Date().getTime(),&#x27;YY年MM月DD日&#x27;);//2017年05月12日formatDate(new Date().getTime(),&#x27;今天是YY/MM/DD hh:mm:ss&#x27;);//今天是2017/05/12 10:07:45\n\n2，指定几天前时间123456789export function getTimeAgo(number) &#123;    let curTime = new Date().getTime();    let startDate = curTime - (number * 3600 * 24 * 1000);    return startDate&#125;\n\n","slug":"时间格式化&指定几天前时间","date":"2024-03-14T08:30:15.000Z","categories_index":"前端","tags_index":"Javascript","author_index":"WuYa"},{"id":"a37c7e744e3e8b3e1324c5d144712ec0","title":"Three问题清单","content":"Three问题清单\n删除2，3d数据dom会跟着删除\n检测数组如果直接存精灵，会出现精灵已经删除，还是会被射线检测到问题，改正后存在group中再放入检测数组\n\n","slug":"Three问题清单","date":"2020-08-15T10:49:36.000Z","categories_index":"前端","tags_index":"Threejs","author_index":"WuYa"},{"id":"5e60f71d8b27147668f2372e11e03f0e","title":"对象，包装类","content":"对象，包装类1，对象直接量&#x2F;自变量12345var obj  =  &#123;    name = &quot;xiaoliu&quot;,    sex = &quot;male&quot;&#125; 属性与属性值用冒号来连接。\n\n2，构造函数（1）内置对象 objack()，array()， nuber() 。（2）自定义对象 。构造函数对象的属性与属性值之间用等号来连接。\n3，对象的增删改查1234增   对象名.属性 = 属性值   eg：obj.name = &quot;xiaoliu&quot;删   delete.对象名.属性    eg：delete.obj.name改   对象名.属性 = 新的属性值  eg：obj.name = &quot;xiaozhang&quot;查   对象名.属性              eg：obj.name\n\n4，对象的执行一次就创建一个新对象，虽然值一样但两者并不相等。123456789var car = new Car();var car1 = new Car();对于想要新对象的值不一样，可以在构造函数里传参数functiion Car (name,sex)&#123;    this.name = name;    this.sex = sex;&#125;var car = new Car(&#x27;xiaoliu&#x27;,&#x27;male&#x27;);var car1 = new Car(&#x27;xiaozhang&#x27;,&#x27;female&#x27;);\n\n5，构造函数内部原理。12345678function Car()&#123;    1.new之后 隐式var this = &#123;&#125;    2.执行代码块    this.name = &quot;xiaoliu&quot;;    this.sex = &quot;male&quot;;    3.隐式的return this&#125;var car = new Car();\n\n6，原始值没有属性和方法，只有对象才有原始值分为原始值和对象类原始值。\n123对象类原始值 var num = new Nember();            var str = new string();            var bol = new boolean();\n\n原始值要访问属性和方法的结果是undefined,字符串有lenth属性\n7，包装类1234var num = 4;num.len = 2;  系统检测原始值没有属性和方法 然后给你new Number(4).lenth = 2; 然后销毁 deleteconsole.log(num.len) 系统检测原始值要访问属性方法 给你new Number(4)查看.lenth属性，由于没设置属性所以返回结果为undefind\n\n","slug":"对象，包装类","date":"2020-08-15T10:49:36.000Z","categories_index":"前端","tags_index":"Javascript","author_index":"WuYa"},{"id":"2ca89c6618e7ab417649e9631a7e5769","title":"Three模型压缩","content":"Three模型压缩\n1，模型压缩\n\n\n\n\n\n\n\n\n\n\n通过模型网格压缩，通过gltf配合Draco压缩的方式，可以在视觉效果近乎一致的情况下，让3D模型文件成倍缩小。（不能压缩贴图）\n\n全局安装\n\n\nDRACO压缩算法\n通过Draco进行压缩基本上是有损的，有两点表现：\n1、Draco通过 Edge breaker 3D 压缩算法改变了模型的网格数据的索引方法，缺少了原来的网格顺序；\n2、Draco通过减少顶点坐标、顶点纹理坐标等信息的位数，以减少数据的存储量。\n\n\n\n1、地表 gltf-pipeline -i jxl.glb -o test-pipeline-notd.glb  -d    默认压缩\n2、外围 gltf-pipeline -i jxl.glb -o test-pipeline-notd.glb  -d –draco.compressionLevel 9 –draco.quantizePositionBits 14   针对栏杆 降低位置坐标属性\n3、 教学楼 gltf-pipeline -i jxl.glb -o test-pipeline-notd.glb  -d –draco.compressionLevel 9 –draco.quantizePositionBits 14 –draco.quantizeTexcoordBits 20 针对墙面贴图降低纹理坐标属性\n\n解压缩\n\n1、new一个 DRACOLoader对象\n2、设置下载的 draco压缩js文件路径\n3、new模型文件加载器\n4、设置模型加载器解压缩\n5、正常使用模型加载得到解压缩过的模型\n\n","slug":"three模型压缩","date":"2020-08-15T10:49:36.000Z","categories_index":"前端","tags_index":"Threejs","author_index":"WuYa"}]